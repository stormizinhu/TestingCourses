{
  "track": {
    "title": "Testes de API: Automação com Postman e Newman",
    "level": "Intermediario",
    "audience": "QAs com experiência em testes manuais ou automação web, e desenvolvedores que desejam aprofundar seus conhecimentos em testes de backend.",
    "outcomes": [
      "Criar e organizar requisições de API em collections do Postman.",
      "Escrever scripts de teste em JavaScript no Postman para validar respostas de API (status, corpo, headers).",
      "Automatizar a execução de collections via linha de comando com o Newman.",
      "Integrar os testes de API em um pipeline de CI/CD simples (ex: GitHub Actions)."
    ],
    "hours_total": 15,
    "modules": [
      {
        "title": "Módulo 1: Dominando o Postman",
        "hours": 4,
        "objectives": [
          "Utilizar variáveis de ambiente e de coleção para gerenciar dados de teste.",
          "Escrever pré-request scripts para preparar dados de teste.",
          "Validar o CRUD de uma API usando uma collection."
        ],
        "prereqs": [
          "Conhecimento básico de APIs REST e métodos HTTP.",
          "Lógica de programação básica."
        ],
        "lessons": [
          {
            "title": "Variáveis e Ambientes no Postman",
            "type": "video",
            "duration_min": 12,
            "videoUrl": "https://www.youtube.com/embed/4sC_y54hFk4",
            "summary": "Aprenda a abstrair URLs, tokens e outros dados usando ambientes e variáveis, tornando suas collections reutilizáveis e fáceis de manter.",
            "resources": [],
            "practice": {
              "steps": [
                "Crie um ambiente 'Desenvolvimento' com uma variável 'base_url'.",
                "Crie uma collection com uma requisição GET para '{{base_url}}/users'.",
                "Execute a requisição e verifique se a variável foi substituída corretamente."
              ],
              "deliverable": "Export da collection e do ambiente do Postman (JSON)."
            },
            "quiz": [
              {
                "q": "Qual a principal diferença entre variáveis de coleção e de ambiente?",
                "choices": [
                  "Nenhuma, são a mesma coisa.",
                  "Variáveis de ambiente são específicas para um ambiente (dev, qa, prod), enquanto as de coleção são compartilhadas em todas as requisições da collection.",
                  "Variáveis de coleção são mais seguras.",
                  "Variáveis de ambiente não podem ser alteradas por scripts."
                ],
                "answer": 1,
                "explanation": "Ambientes permitem trocar facilmente o contexto de execução (ex: apontar para o servidor de QA ou de Produção), enquanto variáveis de coleção são para dados compartilhados dentro da mesma collection."
              }
            ]
          }
        ],
        "mission": {
          "type": "QA_MISSION",
          "scenario": "Usando uma API pública de sua escolha (ex: JSONPlaceholder), crie uma collection no Postman que valide as 4 operações do CRUD para o recurso 'posts'.",
          "acceptance_criteria": [
            "A collection deve ter 4 requisições: POST (criar), GET (ler), PUT (atualizar) e DELETE (remover).",
            "Use variáveis de coleção para armazenar o ID do post criado e reutilizá-lo nas outras requisições.",
            "Cada requisição deve ter pelo menos um teste (assertion) para validar o status code da resposta."
          ],
          "rubric": {
            "critical": 60,
            "minor": 30,
            "report_quality": 10
          },
          "points": 40
        }
      },
      {
        "title": "Módulo 2: Newman e Integração Contínua",
        "hours": 5,
        "objectives": [
          "Instalar e executar o Newman via linha de comando.",
          "Gerar diferentes tipos de relatórios (CLI, HTML, JUnit).",
          "Criar um workflow simples no GitHub Actions para rodar os testes de API a cada push."
        ],
        "prereqs": [
          "Conclusão do Módulo 1",
          "Conhecimento básico de Git e GitHub."
        ],
        "lessons": [
          {
            "title": "Automatizando Collections com Newman",
            "type": "video",
            "duration_min": 15,
            "videoUrl": "https://www.youtube.com/embed/a5u5s0-iL-o",
            "summary": "Leve seus testes de API para o próximo nível executando-os fora do Postman, via linha de comando com o Newman, e integrando-os em processos automatizados.",
            "resources": [
              "https://learning.postman.com/docs/collections/using-newman-cli/command-line-integration-with-newman/"
            ],
            "practice": {
              "steps": [
                "Instale o Node.js e o Newman (npm install -g newman).",
                "Exporte a collection e o ambiente da missão anterior.",
                "Execute a collection via Newman no seu terminal.",
                "Gere um relatório HTML com o 'newman-reporter-htmlextra'."
              ],
              "deliverable": "Print do terminal com a execução do Newman e o arquivo de relatório HTML."
            },
            "quiz": []
          }
        ],
        "mission": {
          "type": "FALHA_CONTROLADA",
          "scenario": "Uma nova regra de negócio foi implementada: ao criar um post (POST /posts), a API agora retorna o status 201 Created, mas seu teste no Postman ainda espera 200 OK. Isso está fazendo seu pipeline de CI falhar.",
          "acceptance_criteria": [
            "Ajuste o script de teste na requisição POST para validar o status code 201.",
            "Execute a collection via Newman e confirme que todos os testes passam.",
            "O relatório do Newman não deve apresentar nenhuma falha."
          ],
          "rubric": {
            "critical": 60,
            "minor": 30,
            "report_quality": 10
          },
          "points": 40
        }
      }
    ],
    "badges": [
      {
        "code": "TRK_INTER_NEWMAN",
        "name": "Mestre da Automação",
        "criteria": "Concluir o módulo de Newman e CI."
      }
    ]
  }
}